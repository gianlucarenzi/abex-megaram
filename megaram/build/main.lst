ARM GAS  /tmp/ccWdPUNf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB133:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccWdPUNf.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE END PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.c    **** /* USER CODE BEGIN PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE END PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.c    **** UART_HandleTypeDef huart1;
  46:Src/main.c    **** 
  47:Src/main.c    **** SRAM_HandleTypeDef hsram1;
  48:Src/main.c    **** SRAM_HandleTypeDef hsram2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** static void MX_FSMC_Init(void);
  58:Src/main.c    **** static void MX_USART1_UART_Init(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   * @retval int
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    ****   
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
ARM GAS  /tmp/ccWdPUNf.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_FSMC_Init();
  98:Src/main.c    ****   MX_USART1_UART_Init();
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END 2 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Infinite loop */
 104:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 105:Src/main.c    ****   while (1)
 106:Src/main.c    ****   {
 107:Src/main.c    ****     /* USER CODE END WHILE */
 108:Src/main.c    **** 
 109:Src/main.c    ****     /* USER CODE BEGIN 3 */
 110:Src/main.c    ****   }
 111:Src/main.c    ****   /* USER CODE END 3 */
 112:Src/main.c    **** }
 113:Src/main.c    **** 
 114:Src/main.c    **** /**
 115:Src/main.c    ****   * @brief System Clock Configuration
 116:Src/main.c    ****   * @retval None
 117:Src/main.c    ****   */
 118:Src/main.c    **** void SystemClock_Config(void)
 119:Src/main.c    **** {
 120:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Src/main.c    **** 
 123:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 124:Src/main.c    ****   */
 125:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 126:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 127:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 128:Src/main.c    ****   */
 129:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 130:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 137:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Src/main.c    ****   {
 139:Src/main.c    ****     Error_Handler();
 140:Src/main.c    ****   }
 141:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 142:Src/main.c    ****   */
 143:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccWdPUNf.s 			page 4


 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 148:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 149:Src/main.c    **** 
 150:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 151:Src/main.c    ****   {
 152:Src/main.c    ****     Error_Handler();
 153:Src/main.c    ****   }
 154:Src/main.c    **** }
 155:Src/main.c    **** 
 156:Src/main.c    **** /**
 157:Src/main.c    ****   * @brief USART1 Initialization Function
 158:Src/main.c    ****   * @param None
 159:Src/main.c    ****   * @retval None
 160:Src/main.c    ****   */
 161:Src/main.c    **** static void MX_USART1_UART_Init(void)
 162:Src/main.c    **** {
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 165:Src/main.c    **** 
 166:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 171:Src/main.c    ****   huart1.Instance = USART1;
 172:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 173:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 174:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 175:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 176:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 177:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 178:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 179:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 180:Src/main.c    ****   {
 181:Src/main.c    ****     Error_Handler();
 182:Src/main.c    ****   }
 183:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 186:Src/main.c    **** 
 187:Src/main.c    **** }
 188:Src/main.c    **** 
 189:Src/main.c    **** /**
 190:Src/main.c    ****   * @brief GPIO Initialization Function
 191:Src/main.c    ****   * @param None
 192:Src/main.c    ****   * @retval None
 193:Src/main.c    ****   */
 194:Src/main.c    **** static void MX_GPIO_Init(void)
 195:Src/main.c    **** {
  27              		.loc 1 195 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 56
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
ARM GAS  /tmp/ccWdPUNf.s 			page 5


  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8EB0     		sub	sp, sp, #56
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 72
 196:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 196 0
  42 0004 0024     		movs	r4, #0
  43 0006 0994     		str	r4, [sp, #36]
  44 0008 0A94     		str	r4, [sp, #40]
  45 000a 0B94     		str	r4, [sp, #44]
  46 000c 0C94     		str	r4, [sp, #48]
  47 000e 0D94     		str	r4, [sp, #52]
  48              	.LBB2:
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* GPIO Ports Clock Enable */
 199:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
  49              		.loc 1 199 0
  50 0010 0094     		str	r4, [sp]
  51 0012 4C4B     		ldr	r3, .L3
  52 0014 1A6B     		ldr	r2, [r3, #48]
  53 0016 42F48072 		orr	r2, r2, #256
  54 001a 1A63     		str	r2, [r3, #48]
  55 001c 1A6B     		ldr	r2, [r3, #48]
  56 001e 02F48072 		and	r2, r2, #256
  57 0022 0092     		str	r2, [sp]
  58 0024 009A     		ldr	r2, [sp]
  59              	.LBE2:
  60              	.LBB3:
 200:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  61              		.loc 1 200 0
  62 0026 0194     		str	r4, [sp, #4]
  63 0028 1A6B     		ldr	r2, [r3, #48]
  64 002a 42F00402 		orr	r2, r2, #4
  65 002e 1A63     		str	r2, [r3, #48]
  66 0030 1A6B     		ldr	r2, [r3, #48]
  67 0032 02F00402 		and	r2, r2, #4
  68 0036 0192     		str	r2, [sp, #4]
  69 0038 019A     		ldr	r2, [sp, #4]
  70              	.LBE3:
  71              	.LBB4:
 201:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  72              		.loc 1 201 0
  73 003a 0294     		str	r4, [sp, #8]
  74 003c 1A6B     		ldr	r2, [r3, #48]
  75 003e 42F02002 		orr	r2, r2, #32
  76 0042 1A63     		str	r2, [r3, #48]
  77 0044 1A6B     		ldr	r2, [r3, #48]
  78 0046 02F02002 		and	r2, r2, #32
  79 004a 0292     		str	r2, [sp, #8]
  80 004c 029A     		ldr	r2, [sp, #8]
  81              	.LBE4:
  82              	.LBB5:
 202:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  83              		.loc 1 202 0
  84 004e 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccWdPUNf.s 			page 6


  85 0050 1A6B     		ldr	r2, [r3, #48]
  86 0052 42F08002 		orr	r2, r2, #128
  87 0056 1A63     		str	r2, [r3, #48]
  88 0058 1A6B     		ldr	r2, [r3, #48]
  89 005a 02F08002 		and	r2, r2, #128
  90 005e 0392     		str	r2, [sp, #12]
  91 0060 039A     		ldr	r2, [sp, #12]
  92              	.LBE5:
  93              	.LBB6:
 203:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  94              		.loc 1 203 0
  95 0062 0494     		str	r4, [sp, #16]
  96 0064 1A6B     		ldr	r2, [r3, #48]
  97 0066 42F00102 		orr	r2, r2, #1
  98 006a 1A63     		str	r2, [r3, #48]
  99 006c 1A6B     		ldr	r2, [r3, #48]
 100 006e 02F00102 		and	r2, r2, #1
 101 0072 0492     		str	r2, [sp, #16]
 102 0074 049A     		ldr	r2, [sp, #16]
 103              	.LBE6:
 104              	.LBB7:
 204:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 105              		.loc 1 204 0
 106 0076 0594     		str	r4, [sp, #20]
 107 0078 1A6B     		ldr	r2, [r3, #48]
 108 007a 42F00202 		orr	r2, r2, #2
 109 007e 1A63     		str	r2, [r3, #48]
 110 0080 1A6B     		ldr	r2, [r3, #48]
 111 0082 02F00202 		and	r2, r2, #2
 112 0086 0592     		str	r2, [sp, #20]
 113 0088 059A     		ldr	r2, [sp, #20]
 114              	.LBE7:
 115              	.LBB8:
 205:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 116              		.loc 1 205 0
 117 008a 0694     		str	r4, [sp, #24]
 118 008c 1A6B     		ldr	r2, [r3, #48]
 119 008e 42F04002 		orr	r2, r2, #64
 120 0092 1A63     		str	r2, [r3, #48]
 121 0094 1A6B     		ldr	r2, [r3, #48]
 122 0096 02F04002 		and	r2, r2, #64
 123 009a 0692     		str	r2, [sp, #24]
 124 009c 069A     		ldr	r2, [sp, #24]
 125              	.LBE8:
 126              	.LBB9:
 206:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 127              		.loc 1 206 0
 128 009e 0794     		str	r4, [sp, #28]
 129 00a0 1A6B     		ldr	r2, [r3, #48]
 130 00a2 42F01002 		orr	r2, r2, #16
 131 00a6 1A63     		str	r2, [r3, #48]
 132 00a8 1A6B     		ldr	r2, [r3, #48]
 133 00aa 02F01002 		and	r2, r2, #16
 134 00ae 0792     		str	r2, [sp, #28]
 135 00b0 079A     		ldr	r2, [sp, #28]
 136              	.LBE9:
 137              	.LBB10:
ARM GAS  /tmp/ccWdPUNf.s 			page 7


 207:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 138              		.loc 1 207 0
 139 00b2 0894     		str	r4, [sp, #32]
 140 00b4 1A6B     		ldr	r2, [r3, #48]
 141 00b6 42F00802 		orr	r2, r2, #8
 142 00ba 1A63     		str	r2, [r3, #48]
 143 00bc 1B6B     		ldr	r3, [r3, #48]
 144 00be 03F00803 		and	r3, r3, #8
 145 00c2 0893     		str	r3, [sp, #32]
 146 00c4 089B     		ldr	r3, [sp, #32]
 147              	.LBE10:
 208:Src/main.c    **** 
 209:Src/main.c    ****   /*Configure GPIO pin Output Level */
 210:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LED_Pin|PB6_Pin|PB9_Pin, GPIO_PIN_RESET);
 148              		.loc 1 210 0
 149 00c6 204D     		ldr	r5, .L3+4
 150 00c8 2246     		mov	r2, r4
 151 00ca 40F24121 		movw	r1, #577
 152 00ce 2846     		mov	r0, r5
 153 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 154              	.LVL0:
 211:Src/main.c    **** 
 212:Src/main.c    ****   /*Configure GPIO pin Output Level */
 213:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, mRST_Pin|mRD5_Pin|mIRQ_Pin|mREF_Pin 
 155              		.loc 1 213 0
 156 00d4 0122     		movs	r2, #1
 157 00d6 40F2BE51 		movw	r1, #1470
 158 00da 2846     		mov	r0, r5
 159 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL1:
 214:Src/main.c    ****                           |mRD4_Pin|mEXSEL_Pin|mHALT_Pin|mMPD_Pin, GPIO_PIN_SET);
 215:Src/main.c    **** 
 216:Src/main.c    ****   /*Configure GPIO pins : mPHI2_Pin mPHI2I0_Pin mS5_Pin mS4_Pin 
 217:Src/main.c    ****                            mD1XX_Pin mCCTL_Pin mRW_Pin mCONF2_Pin 
 218:Src/main.c    ****                            mCONF1_Pin */
 219:Src/main.c    ****   GPIO_InitStruct.Pin = mPHI2_Pin|mPHI2I0_Pin|mS5_Pin|mS4_Pin 
 161              		.loc 1 219 0
 162 00e0 40F2FF13 		movw	r3, #511
 163 00e4 0993     		str	r3, [sp, #36]
 220:Src/main.c    ****                           |mD1XX_Pin|mCCTL_Pin|mRW_Pin|mCONF2_Pin 
 221:Src/main.c    ****                           |mCONF1_Pin;
 222:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 164              		.loc 1 222 0
 165 00e6 0A94     		str	r4, [sp, #40]
 223:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 223 0
 167 00e8 0B94     		str	r4, [sp, #44]
 224:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 168              		.loc 1 224 0
 169 00ea 09A9     		add	r1, sp, #36
 170 00ec 1748     		ldr	r0, .L3+8
 171 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 172              	.LVL2:
 225:Src/main.c    **** 
 226:Src/main.c    ****   /*Configure GPIO pins : mA13_Pin mA14_Pin mA15_Pin mA0_Pin 
 227:Src/main.c    ****                            mA1_Pin mA2_Pin mA3_Pin mA4_Pin 
 228:Src/main.c    ****                            mA5_Pin mA6_Pin mA7_Pin mA8_Pin 
ARM GAS  /tmp/ccWdPUNf.s 			page 8


 229:Src/main.c    ****                            mA9_Pin mA10_Pin mA11_Pin mA12_Pin */
 230:Src/main.c    ****   GPIO_InitStruct.Pin = mA13_Pin|mA14_Pin|mA15_Pin|mA0_Pin 
 173              		.loc 1 230 0
 174 00f2 4FF6FF73 		movw	r3, #65535
 175 00f6 0993     		str	r3, [sp, #36]
 231:Src/main.c    ****                           |mA1_Pin|mA2_Pin|mA3_Pin|mA4_Pin 
 232:Src/main.c    ****                           |mA5_Pin|mA6_Pin|mA7_Pin|mA8_Pin 
 233:Src/main.c    ****                           |mA9_Pin|mA10_Pin|mA11_Pin|mA12_Pin;
 234:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 176              		.loc 1 234 0
 177 00f8 0A94     		str	r4, [sp, #40]
 235:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 178              		.loc 1 235 0
 179 00fa 0B94     		str	r4, [sp, #44]
 236:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 180              		.loc 1 236 0
 181 00fc 09A9     		add	r1, sp, #36
 182 00fe 1448     		ldr	r0, .L3+12
 183 0100 FFF7FEFF 		bl	HAL_GPIO_Init
 184              	.LVL3:
 237:Src/main.c    **** 
 238:Src/main.c    ****   /*Configure GPIO pins : mD0_Pin mD1_Pin mD2_Pin mD3_Pin 
 239:Src/main.c    ****                            mD4_Pin mD5_Pin mD6_Pin mD7_Pin */
 240:Src/main.c    ****   GPIO_InitStruct.Pin = mD0_Pin|mD1_Pin|mD2_Pin|mD3_Pin 
 185              		.loc 1 240 0
 186 0104 FF23     		movs	r3, #255
 187 0106 0993     		str	r3, [sp, #36]
 241:Src/main.c    ****                           |mD4_Pin|mD5_Pin|mD6_Pin|mD7_Pin;
 242:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 188              		.loc 1 242 0
 189 0108 0A94     		str	r4, [sp, #40]
 243:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 190              		.loc 1 243 0
 191 010a 0B94     		str	r4, [sp, #44]
 244:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 192              		.loc 1 244 0
 193 010c 09A9     		add	r1, sp, #36
 194 010e 1148     		ldr	r0, .L3+16
 195 0110 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL4:
 245:Src/main.c    **** 
 246:Src/main.c    ****   /*Configure GPIO pins : LED_Pin mRST_Pin mRD5_Pin mIRQ_Pin 
 247:Src/main.c    ****                            mREF_Pin mRD4_Pin mEXSEL_Pin mHALT_Pin 
 248:Src/main.c    ****                            mMPD_Pin */
 249:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Pin|mRST_Pin|mRD5_Pin|mIRQ_Pin 
 197              		.loc 1 249 0
 198 0114 40F2BF53 		movw	r3, #1471
 199 0118 0993     		str	r3, [sp, #36]
 250:Src/main.c    ****                           |mREF_Pin|mRD4_Pin|mEXSEL_Pin|mHALT_Pin 
 251:Src/main.c    ****                           |mMPD_Pin;
 252:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 200              		.loc 1 252 0
 201 011a 0126     		movs	r6, #1
 202 011c 0A96     		str	r6, [sp, #40]
 253:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 253 0
 204 011e 0B94     		str	r4, [sp, #44]
ARM GAS  /tmp/ccWdPUNf.s 			page 9


 254:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 205              		.loc 1 254 0
 206 0120 0323     		movs	r3, #3
 207 0122 0C93     		str	r3, [sp, #48]
 255:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 208              		.loc 1 255 0
 209 0124 09A9     		add	r1, sp, #36
 210 0126 2846     		mov	r0, r5
 211 0128 FFF7FEFF 		bl	HAL_GPIO_Init
 212              	.LVL5:
 256:Src/main.c    **** 
 257:Src/main.c    ****   /*Configure GPIO pins : PB6_Pin PB9_Pin */
 258:Src/main.c    ****   GPIO_InitStruct.Pin = PB6_Pin|PB9_Pin;
 213              		.loc 1 258 0
 214 012c 4FF41073 		mov	r3, #576
 215 0130 0993     		str	r3, [sp, #36]
 259:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 216              		.loc 1 259 0
 217 0132 0A96     		str	r6, [sp, #40]
 260:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 218              		.loc 1 260 0
 219 0134 0B94     		str	r4, [sp, #44]
 261:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 220              		.loc 1 261 0
 221 0136 0C94     		str	r4, [sp, #48]
 262:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 222              		.loc 1 262 0
 223 0138 09A9     		add	r1, sp, #36
 224 013a 2846     		mov	r0, r5
 225 013c FFF7FEFF 		bl	HAL_GPIO_Init
 226              	.LVL6:
 263:Src/main.c    **** 
 264:Src/main.c    **** }
 227              		.loc 1 264 0
 228 0140 0EB0     		add	sp, sp, #56
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 16
 231              		@ sp needed
 232 0142 70BD     		pop	{r4, r5, r6, pc}
 233              	.L4:
 234              		.align	2
 235              	.L3:
 236 0144 00380240 		.word	1073887232
 237 0148 00040240 		.word	1073873920
 238 014c 00200240 		.word	1073881088
 239 0150 00080240 		.word	1073874944
 240 0154 00000240 		.word	1073872896
 241              		.cfi_endproc
 242              	.LFE133:
 244              		.section	.text.MX_FSMC_Init,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	MX_FSMC_Init:
 252              	.LFB134:
ARM GAS  /tmp/ccWdPUNf.s 			page 10


 265:Src/main.c    **** 
 266:Src/main.c    **** /* FSMC initialization function */
 267:Src/main.c    **** static void MX_FSMC_Init(void)
 268:Src/main.c    **** {
 253              		.loc 1 268 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 32
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 258              	.LCFI3:
 259              		.cfi_def_cfa_offset 32
 260              		.cfi_offset 4, -32
 261              		.cfi_offset 5, -28
 262              		.cfi_offset 6, -24
 263              		.cfi_offset 7, -20
 264              		.cfi_offset 8, -16
 265              		.cfi_offset 9, -12
 266              		.cfi_offset 10, -8
 267              		.cfi_offset 14, -4
 268 0004 88B0     		sub	sp, sp, #32
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 64
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* USER CODE BEGIN FSMC_Init 0 */
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE END FSMC_Init 0 */
 273:Src/main.c    **** 
 274:Src/main.c    ****   FSMC_NORSRAM_TimingTypeDef Timing = {0};
 271              		.loc 1 274 0
 272 0006 0024     		movs	r4, #0
 273 0008 0794     		str	r4, [sp, #28]
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE BEGIN FSMC_Init 1 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE END FSMC_Init 1 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /** Perform the SRAM1 memory initialization sequence
 281:Src/main.c    ****   */
 282:Src/main.c    ****   hsram1.Instance = FSMC_NORSRAM_DEVICE;
 274              		.loc 1 282 0
 275 000a 2548     		ldr	r0, .L7
 276 000c 4FF0204A 		mov	r10, #-1610612736
 277 0010 C0F800A0 		str	r10, [r0]
 283:Src/main.c    ****   hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 278              		.loc 1 283 0
 279 0014 DFF89090 		ldr	r9, .L7+8
 280 0018 C0F80490 		str	r9, [r0, #4]
 284:Src/main.c    ****   /* hsram1.Init */
 285:Src/main.c    ****   hsram1.Init.NSBank = FSMC_NORSRAM_BANK1;
 281              		.loc 1 285 0
 282 001c 8460     		str	r4, [r0, #8]
 286:Src/main.c    ****   hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 283              		.loc 1 286 0
 284 001e C460     		str	r4, [r0, #12]
 287:Src/main.c    ****   hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 285              		.loc 1 287 0
 286 0020 0461     		str	r4, [r0, #16]
ARM GAS  /tmp/ccWdPUNf.s 			page 11


 288:Src/main.c    ****   hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_8;
 287              		.loc 1 288 0
 288 0022 4461     		str	r4, [r0, #20]
 289:Src/main.c    ****   hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 289              		.loc 1 289 0
 290 0024 8461     		str	r4, [r0, #24]
 290:Src/main.c    ****   hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 291              		.loc 1 290 0
 292 0026 C461     		str	r4, [r0, #28]
 291:Src/main.c    ****   hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 293              		.loc 1 291 0
 294 0028 0462     		str	r4, [r0, #32]
 292:Src/main.c    ****   hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 295              		.loc 1 292 0
 296 002a 4462     		str	r4, [r0, #36]
 293:Src/main.c    ****   hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_DISABLE;
 297              		.loc 1 293 0
 298 002c 8462     		str	r4, [r0, #40]
 294:Src/main.c    ****   hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 299              		.loc 1 294 0
 300 002e C462     		str	r4, [r0, #44]
 295:Src/main.c    ****   hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 301              		.loc 1 295 0
 302 0030 0463     		str	r4, [r0, #48]
 296:Src/main.c    ****   hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 303              		.loc 1 296 0
 304 0032 4463     		str	r4, [r0, #52]
 297:Src/main.c    ****   hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 305              		.loc 1 297 0
 306 0034 8463     		str	r4, [r0, #56]
 298:Src/main.c    ****   hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 307              		.loc 1 298 0
 308 0036 4464     		str	r4, [r0, #68]
 299:Src/main.c    ****   /* Timing */
 300:Src/main.c    ****   Timing.AddressSetupTime = 15;
 309              		.loc 1 300 0
 310 0038 0F25     		movs	r5, #15
 311 003a 0195     		str	r5, [sp, #4]
 301:Src/main.c    ****   Timing.AddressHoldTime = 15;
 312              		.loc 1 301 0
 313 003c 0295     		str	r5, [sp, #8]
 302:Src/main.c    ****   Timing.DataSetupTime = 255;
 314              		.loc 1 302 0
 315 003e 4FF0FF08 		mov	r8, #255
 316 0042 CDF80C80 		str	r8, [sp, #12]
 303:Src/main.c    ****   Timing.BusTurnAroundDuration = 15;
 317              		.loc 1 303 0
 318 0046 0495     		str	r5, [sp, #16]
 304:Src/main.c    ****   Timing.CLKDivision = 16;
 319              		.loc 1 304 0
 320 0048 1027     		movs	r7, #16
 321 004a 0597     		str	r7, [sp, #20]
 305:Src/main.c    ****   Timing.DataLatency = 17;
 322              		.loc 1 305 0
 323 004c 1126     		movs	r6, #17
 324 004e 0696     		str	r6, [sp, #24]
 306:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
ARM GAS  /tmp/ccWdPUNf.s 			page 12


 307:Src/main.c    ****   /* ExtTiming */
 308:Src/main.c    **** 
 309:Src/main.c    ****   if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
 325              		.loc 1 309 0
 326 0050 2246     		mov	r2, r4
 327 0052 01A9     		add	r1, sp, #4
 328 0054 FFF7FEFF 		bl	HAL_SRAM_Init
 329              	.LVL7:
 310:Src/main.c    ****   {
 311:Src/main.c    ****     Error_Handler( );
 312:Src/main.c    ****   }
 313:Src/main.c    **** 
 314:Src/main.c    ****   /** Perform the SRAM2 memory initialization sequence
 315:Src/main.c    ****   */
 316:Src/main.c    ****   hsram2.Instance = FSMC_NORSRAM_DEVICE;
 330              		.loc 1 316 0
 331 0058 1248     		ldr	r0, .L7+4
 332 005a C0F800A0 		str	r10, [r0]
 317:Src/main.c    ****   hsram2.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
 333              		.loc 1 317 0
 334 005e C0F80490 		str	r9, [r0, #4]
 318:Src/main.c    ****   /* hsram2.Init */
 319:Src/main.c    ****   hsram2.Init.NSBank = FSMC_NORSRAM_BANK2;
 335              		.loc 1 319 0
 336 0062 0223     		movs	r3, #2
 337 0064 8360     		str	r3, [r0, #8]
 320:Src/main.c    ****   hsram2.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 338              		.loc 1 320 0
 339 0066 C460     		str	r4, [r0, #12]
 321:Src/main.c    ****   hsram2.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 340              		.loc 1 321 0
 341 0068 0461     		str	r4, [r0, #16]
 322:Src/main.c    ****   hsram2.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_8;
 342              		.loc 1 322 0
 343 006a 4461     		str	r4, [r0, #20]
 323:Src/main.c    ****   hsram2.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 344              		.loc 1 323 0
 345 006c 8461     		str	r4, [r0, #24]
 324:Src/main.c    ****   hsram2.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 346              		.loc 1 324 0
 347 006e C461     		str	r4, [r0, #28]
 325:Src/main.c    ****   hsram2.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 348              		.loc 1 325 0
 349 0070 0462     		str	r4, [r0, #32]
 326:Src/main.c    ****   hsram2.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 350              		.loc 1 326 0
 351 0072 4462     		str	r4, [r0, #36]
 327:Src/main.c    ****   hsram2.Init.WriteOperation = FSMC_WRITE_OPERATION_DISABLE;
 352              		.loc 1 327 0
 353 0074 8462     		str	r4, [r0, #40]
 328:Src/main.c    ****   hsram2.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 354              		.loc 1 328 0
 355 0076 C462     		str	r4, [r0, #44]
 329:Src/main.c    ****   hsram2.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 356              		.loc 1 329 0
 357 0078 0463     		str	r4, [r0, #48]
 330:Src/main.c    ****   hsram2.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
ARM GAS  /tmp/ccWdPUNf.s 			page 13


 358              		.loc 1 330 0
 359 007a 4463     		str	r4, [r0, #52]
 331:Src/main.c    ****   hsram2.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 360              		.loc 1 331 0
 361 007c 8463     		str	r4, [r0, #56]
 332:Src/main.c    ****   hsram2.Init.PageSize = FSMC_PAGE_SIZE_NONE;
 362              		.loc 1 332 0
 363 007e 4464     		str	r4, [r0, #68]
 333:Src/main.c    ****   /* Timing */
 334:Src/main.c    ****   Timing.AddressSetupTime = 15;
 364              		.loc 1 334 0
 365 0080 0195     		str	r5, [sp, #4]
 335:Src/main.c    ****   Timing.AddressHoldTime = 15;
 366              		.loc 1 335 0
 367 0082 0295     		str	r5, [sp, #8]
 336:Src/main.c    ****   Timing.DataSetupTime = 255;
 368              		.loc 1 336 0
 369 0084 CDF80C80 		str	r8, [sp, #12]
 337:Src/main.c    ****   Timing.BusTurnAroundDuration = 15;
 370              		.loc 1 337 0
 371 0088 0495     		str	r5, [sp, #16]
 338:Src/main.c    ****   Timing.CLKDivision = 16;
 372              		.loc 1 338 0
 373 008a 0597     		str	r7, [sp, #20]
 339:Src/main.c    ****   Timing.DataLatency = 17;
 374              		.loc 1 339 0
 375 008c 0696     		str	r6, [sp, #24]
 340:Src/main.c    ****   Timing.AccessMode = FSMC_ACCESS_MODE_A;
 376              		.loc 1 340 0
 377 008e 0794     		str	r4, [sp, #28]
 341:Src/main.c    ****   /* ExtTiming */
 342:Src/main.c    **** 
 343:Src/main.c    ****   if (HAL_SRAM_Init(&hsram2, &Timing, NULL) != HAL_OK)
 378              		.loc 1 343 0
 379 0090 2246     		mov	r2, r4
 380 0092 01A9     		add	r1, sp, #4
 381 0094 FFF7FEFF 		bl	HAL_SRAM_Init
 382              	.LVL8:
 344:Src/main.c    ****   {
 345:Src/main.c    ****     Error_Handler( );
 346:Src/main.c    ****   }
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* USER CODE BEGIN FSMC_Init 2 */
 349:Src/main.c    **** 
 350:Src/main.c    ****   /* USER CODE END FSMC_Init 2 */
 351:Src/main.c    **** }
 383              		.loc 1 351 0
 384 0098 08B0     		add	sp, sp, #32
 385              	.LCFI5:
 386              		.cfi_def_cfa_offset 32
 387              		@ sp needed
 388 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 389              	.L8:
 390 009e 00BF     		.align	2
 391              	.L7:
 392 00a0 00000000 		.word	hsram1
 393 00a4 00000000 		.word	hsram2
ARM GAS  /tmp/ccWdPUNf.s 			page 14


 394 00a8 040100A0 		.word	-1610612476
 395              		.cfi_endproc
 396              	.LFE134:
 398              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 399              		.align	1
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	MX_USART1_UART_Init:
 406              	.LFB132:
 162:Src/main.c    **** 
 407              		.loc 1 162 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411 0000 08B5     		push	{r3, lr}
 412              	.LCFI6:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 3, -8
 415              		.cfi_offset 14, -4
 171:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 416              		.loc 1 171 0
 417 0002 0848     		ldr	r0, .L11
 418 0004 084B     		ldr	r3, .L11+4
 419 0006 0360     		str	r3, [r0]
 172:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 420              		.loc 1 172 0
 421 0008 4FF4E133 		mov	r3, #115200
 422 000c 4360     		str	r3, [r0, #4]
 173:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 423              		.loc 1 173 0
 424 000e 0023     		movs	r3, #0
 425 0010 8360     		str	r3, [r0, #8]
 174:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 426              		.loc 1 174 0
 427 0012 C360     		str	r3, [r0, #12]
 175:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 428              		.loc 1 175 0
 429 0014 0361     		str	r3, [r0, #16]
 176:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 430              		.loc 1 176 0
 431 0016 0C22     		movs	r2, #12
 432 0018 4261     		str	r2, [r0, #20]
 177:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 433              		.loc 1 177 0
 434 001a 8361     		str	r3, [r0, #24]
 178:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 435              		.loc 1 178 0
 436 001c C361     		str	r3, [r0, #28]
 179:Src/main.c    ****   {
 437              		.loc 1 179 0
 438 001e FFF7FEFF 		bl	HAL_UART_Init
 439              	.LVL9:
 187:Src/main.c    **** 
 440              		.loc 1 187 0
 441 0022 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccWdPUNf.s 			page 15


 442              	.L12:
 443              		.align	2
 444              	.L11:
 445 0024 00000000 		.word	huart1
 446 0028 00100140 		.word	1073811456
 447              		.cfi_endproc
 448              	.LFE132:
 450              		.section	.text.SystemClock_Config,"ax",%progbits
 451              		.align	1
 452              		.global	SystemClock_Config
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	SystemClock_Config:
 459              	.LFB131:
 119:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 460              		.loc 1 119 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 80
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 30B5     		push	{r4, r5, lr}
 465              	.LCFI7:
 466              		.cfi_def_cfa_offset 12
 467              		.cfi_offset 4, -12
 468              		.cfi_offset 5, -8
 469              		.cfi_offset 14, -4
 470 0002 95B0     		sub	sp, sp, #84
 471              	.LCFI8:
 472              		.cfi_def_cfa_offset 96
 120:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 473              		.loc 1 120 0
 474 0004 3022     		movs	r2, #48
 475 0006 0021     		movs	r1, #0
 476 0008 08A8     		add	r0, sp, #32
 477 000a FFF7FEFF 		bl	memset
 478              	.LVL10:
 121:Src/main.c    **** 
 479              		.loc 1 121 0
 480 000e 0024     		movs	r4, #0
 481 0010 0394     		str	r4, [sp, #12]
 482 0012 0494     		str	r4, [sp, #16]
 483 0014 0594     		str	r4, [sp, #20]
 484 0016 0694     		str	r4, [sp, #24]
 485 0018 0794     		str	r4, [sp, #28]
 486              	.LBB11:
 125:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 487              		.loc 1 125 0
 488 001a 0194     		str	r4, [sp, #4]
 489 001c 1B4B     		ldr	r3, .L15
 490 001e 1A6C     		ldr	r2, [r3, #64]
 491 0020 42F08052 		orr	r2, r2, #268435456
 492 0024 1A64     		str	r2, [r3, #64]
 493 0026 1B6C     		ldr	r3, [r3, #64]
 494 0028 03F08053 		and	r3, r3, #268435456
 495 002c 0193     		str	r3, [sp, #4]
 496 002e 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccWdPUNf.s 			page 16


 497              	.LBE11:
 498              	.LBB12:
 126:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 499              		.loc 1 126 0
 500 0030 0294     		str	r4, [sp, #8]
 501 0032 174B     		ldr	r3, .L15+4
 502 0034 1A68     		ldr	r2, [r3]
 503 0036 42F48042 		orr	r2, r2, #16384
 504 003a 1A60     		str	r2, [r3]
 505 003c 1B68     		ldr	r3, [r3]
 506 003e 03F48043 		and	r3, r3, #16384
 507 0042 0293     		str	r3, [sp, #8]
 508 0044 029B     		ldr	r3, [sp, #8]
 509              	.LBE12:
 129:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 510              		.loc 1 129 0
 511 0046 0123     		movs	r3, #1
 512 0048 0893     		str	r3, [sp, #32]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 513              		.loc 1 130 0
 514 004a 4FF48033 		mov	r3, #65536
 515 004e 0993     		str	r3, [sp, #36]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 516              		.loc 1 131 0
 517 0050 0225     		movs	r5, #2
 518 0052 0E95     		str	r5, [sp, #56]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 519              		.loc 1 132 0
 520 0054 4FF48003 		mov	r3, #4194304
 521 0058 0F93     		str	r3, [sp, #60]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 522              		.loc 1 133 0
 523 005a 0423     		movs	r3, #4
 524 005c 1093     		str	r3, [sp, #64]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 525              		.loc 1 134 0
 526 005e A822     		movs	r2, #168
 527 0060 1192     		str	r2, [sp, #68]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 528              		.loc 1 135 0
 529 0062 1295     		str	r5, [sp, #72]
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 530              		.loc 1 136 0
 531 0064 1393     		str	r3, [sp, #76]
 137:Src/main.c    ****   {
 532              		.loc 1 137 0
 533 0066 08A8     		add	r0, sp, #32
 534 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 535              	.LVL11:
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 536              		.loc 1 143 0
 537 006c 0F23     		movs	r3, #15
 538 006e 0393     		str	r3, [sp, #12]
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 539              		.loc 1 145 0
 540 0070 0495     		str	r5, [sp, #16]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
ARM GAS  /tmp/ccWdPUNf.s 			page 17


 541              		.loc 1 146 0
 542 0072 0594     		str	r4, [sp, #20]
 147:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 543              		.loc 1 147 0
 544 0074 4FF4A053 		mov	r3, #5120
 545 0078 0693     		str	r3, [sp, #24]
 148:Src/main.c    **** 
 546              		.loc 1 148 0
 547 007a 4FF48053 		mov	r3, #4096
 548 007e 0793     		str	r3, [sp, #28]
 150:Src/main.c    ****   {
 549              		.loc 1 150 0
 550 0080 0521     		movs	r1, #5
 551 0082 03A8     		add	r0, sp, #12
 552 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 553              	.LVL12:
 154:Src/main.c    **** 
 554              		.loc 1 154 0
 555 0088 15B0     		add	sp, sp, #84
 556              	.LCFI9:
 557              		.cfi_def_cfa_offset 12
 558              		@ sp needed
 559 008a 30BD     		pop	{r4, r5, pc}
 560              	.L16:
 561              		.align	2
 562              	.L15:
 563 008c 00380240 		.word	1073887232
 564 0090 00700040 		.word	1073770496
 565              		.cfi_endproc
 566              	.LFE131:
 568              		.section	.text.main,"ax",%progbits
 569              		.align	1
 570              		.global	main
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv4-sp-d16
 576              	main:
 577              	.LFB130:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 578              		.loc 1 73 0
 579              		.cfi_startproc
 580              		@ Volatile: function does not return.
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0000 08B5     		push	{r3, lr}
 584              	.LCFI10:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 3, -8
 587              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 588              		.loc 1 82 0
 589 0002 FFF7FEFF 		bl	HAL_Init
 590              	.LVL13:
  89:Src/main.c    **** 
 591              		.loc 1 89 0
 592 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccWdPUNf.s 			page 18


 593              	.LVL14:
  96:Src/main.c    ****   MX_FSMC_Init();
 594              		.loc 1 96 0
 595 000a FFF7FEFF 		bl	MX_GPIO_Init
 596              	.LVL15:
  97:Src/main.c    ****   MX_USART1_UART_Init();
 597              		.loc 1 97 0
 598 000e FFF7FEFF 		bl	MX_FSMC_Init
 599              	.LVL16:
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
 600              		.loc 1 98 0
 601 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 602              	.LVL17:
 603              	.L18:
 604 0016 FEE7     		b	.L18
 605              		.cfi_endproc
 606              	.LFE130:
 608              		.section	.text.Error_Handler,"ax",%progbits
 609              		.align	1
 610              		.global	Error_Handler
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	Error_Handler:
 617              	.LFB135:
 352:Src/main.c    **** 
 353:Src/main.c    **** /* USER CODE BEGIN 4 */
 354:Src/main.c    **** 
 355:Src/main.c    **** /* USER CODE END 4 */
 356:Src/main.c    **** 
 357:Src/main.c    **** /**
 358:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 359:Src/main.c    ****   * @retval None
 360:Src/main.c    ****   */
 361:Src/main.c    **** void Error_Handler(void)
 362:Src/main.c    **** {
 618              		.loc 1 362 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 363:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 364:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 367:Src/main.c    **** }
 623              		.loc 1 367 0
 624 0000 7047     		bx	lr
 625              		.cfi_endproc
 626              	.LFE135:
 628              		.comm	hsram2,80,4
 629              		.comm	hsram1,80,4
 630              		.comm	huart1,64,4
 631              		.text
 632              	.Letext0:
 633              		.file 2 "/home/gianluca/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
ARM GAS  /tmp/ccWdPUNf.s 			page 19


 634              		.file 3 "/home/gianluca/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 635              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 636              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 637              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 638              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 639              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 640              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 641              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 642              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 643              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_fsmc.h"
 644              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_sram.h"
 645              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 646              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 647              		.file 16 "<built-in>"
ARM GAS  /tmp/ccWdPUNf.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccWdPUNf.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccWdPUNf.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccWdPUNf.s:236    .text.MX_GPIO_Init:0000000000000144 $d
     /tmp/ccWdPUNf.s:245    .text.MX_FSMC_Init:0000000000000000 $t
     /tmp/ccWdPUNf.s:251    .text.MX_FSMC_Init:0000000000000000 MX_FSMC_Init
     /tmp/ccWdPUNf.s:392    .text.MX_FSMC_Init:00000000000000a0 $d
                            *COM*:0000000000000050 hsram1
                            *COM*:0000000000000050 hsram2
     /tmp/ccWdPUNf.s:399    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccWdPUNf.s:405    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccWdPUNf.s:445    .text.MX_USART1_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccWdPUNf.s:451    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccWdPUNf.s:458    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccWdPUNf.s:563    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccWdPUNf.s:569    .text.main:0000000000000000 $t
     /tmp/ccWdPUNf.s:576    .text.main:0000000000000000 main
     /tmp/ccWdPUNf.s:609    .text.Error_Handler:0000000000000000 $t
     /tmp/ccWdPUNf.s:616    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SRAM_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
